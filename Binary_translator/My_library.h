#ifndef HANDMADE_LIBRARY
#define HANDMADE_LIBRARY

const unsigned char MY_PRINTF_MACHINE_CODE[] =
{
0x53,                      						// push   rbx
0x51,                      						// push   rcx
0x52,                      						// push   rdx
0x41, 0x51,                   					// push   r9
0x41, 0x52,                   					// push   r10
0x57,                      						// push   rdi
0x56,											// push rsi
0xe8, 0x0a, 0x00, 0x00, 0x00,          			// call   0x2a
0x5e,											// pop rsi
0x5f,                      						// pop    rdi
0x41, 0x5a,                   					// pop    r10
0x41, 0x59,                   					// pop    r9
0x5a,                      						// pop    rdx
0x59,                      						// pop    rcx
0x5b,                      						// pop    rbx
0xc3,                      						// ret
0xe8, 0x1d, 0x00, 0x00, 0x00,          			// call   0x4c
0x48, 0x89, 0xc1,                				// mov    rcx,rax
0xb8, 0x01, 0x00, 0x00, 0x00,          			// mov    eax,0x1
0xbf, 0x01, 0x00, 0x00, 0x00,          			// mov    edi,0x1
0x48, 0xbe, 0x00, 0x20, 0x40, 0x00, 0x00,    	// movabs rsi,0x402000
0x00, 0x00, 0x00,
0x48, 0x89, 0xca,                				// mov    rdx,rcx
0x0f, 0x05,                   					// syscall
0xc3,                     					 	// ret
0x49, 0x89, 0xc2,                				// mov    r10,rax
0x48, 0x31, 0xc9,                				// xor    rcx,rcx
0x4d, 0x31, 0xc9,                				// xor    r9,r9
0xfd,                      						// std
0x48, 0x31, 0xd2,                				// xor    rdx,rdx
0xbb, 0x0a, 0x00, 0x00, 0x00,          			// mov    ebx,0xa
0x48, 0xf7, 0xf3,                				// div    rbx
0x49, 0xff, 0xc1,                				// inc    r9
0x48, 0x83, 0xf8, 0x00,             			// cmp    rax,0x0
0x77, 0xec,                   					// ja     0x56
0x4c, 0x89, 0xd0,                				// mov    rax,r10
0x48, 0xbf, 0x00, 0x20, 0x40, 0x00, 0x00,    	// movabs rdi,0x402000
0x00, 0x00, 0x00,
0x49, 0x81, 0xf9, 0x00, 0x10, 0x00, 0x00,    	// cmp    r9,0x1000
0x76, 0x09,                   					// jbe    0x89
0x48, 0x81, 0xc7, 0x00, 0x10, 0x00, 0x00,    	// add    rdi,0x1000
0xeb, 0x06,                   					// jmp    0x8f
0x4c, 0x01, 0xcf,                				// add    rdi,r9
0xc6, 0x07, 0x0a,                				// mov    BYTE PTR [rdi],0xa
0x48, 0xff, 0xcf,                				// dec    rdi
0x48, 0x31, 0xd2,                				// xor    rdx,rdx
0xbb, 0x0a, 0x00, 0x00, 0x00,          			// mov    ebx,0xa
0x48, 0xf7, 0xf3,                				// div    rbx
0x50,                      						// push   rax
0x48, 0x89, 0xd0,                				// mov    rax,rdx
0x04, 0x30,                   					// add    al,0x30
0x88, 0x07,                   					// mov    BYTE PTR [rdi],al
0x48, 0xff, 0xcf,                				// dec    rdi
0x58,                      						// pop    rax
0x48, 0x83, 0xf8, 0x00,             			// cmp    rax,0x0
0x77, 0xe3,                   					// ja     0x92
0x49, 0xff, 0xc1,                				// inc    r9
0x4c, 0x89, 0xc8,                				// mov    rax,r9
0xc3,                      						// ret
};

const int PRINTF_ADDRESS = 26;

const unsigned char MY_SCANF_MACHINE_CODE[] =
{
0x53,                      						//push   rbx
0x51,                      						//push   rcx
0x52,                      						//push   rdx
0x57,                      						//push   rdi
0x56,                      						//push   rsi
0x41, 0x52,                   					//push   r10
0x41, 0x51,                   					//push   r9
0xe8, 0x0a, 0x00, 0x00, 0x00,          			//call   0x27
0x41, 0x59,                   					//pop    r9
0x41, 0x5a,                   					//pop    r10
0x5e,                      						//pop    rsi
0x5f,                      						//pop    rdi
0x5a,                      						//pop    rdx
0x59,                      						//pop    rcx
0x5b,                      						//pop    rbx
0xc3,                      						//ret
0xe8, 0x01, 0x00, 0x00, 0x00,          			//call   0x2d
0xc3,                      						//ret
0x48, 0x31, 0xc0,                				//xor    rax,rax
0x4d, 0x31, 0xc9,                				//xor    r9,r9
0x49, 0xff, 0xc1,                				//inc    r9
0x49, 0x81, 0xf9, 0x00, 0x10, 0x00, 0x00,    	//cmp    r9,0x1000
0x73, 0x3c,                  			 		//jae    0x7b
0x49, 0x89, 0xc2,                				//mov    r10,rax
0x48, 0x31, 0xc0,                				//xor    rax,rax
0xbf, 0x00, 0x00, 0x00, 0x00,          			//mov    edi,0x0
0x48, 0xbe, 0x00, 0x20, 0x40, 0x00, 0x00,    	//movabs rsi,0x402000
0x00, 0x00, 0x00,
0xba, 0x01, 0x00, 0x00, 0x00,          			//mov    edx,0x1
0x0f, 0x05,                   					//syscall
0x4c, 0x89, 0xd0,                				//mov    rax,r10
0x48, 0x8b, 0x1e,                				//mov    rbx,QWORD PTR [rsi]
0x48, 0x89, 0xde,                				//mov    rsi,rbx
0x48, 0x83, 0xfb, 0x0a,             			//cmp    rbx,0xa
0x76, 0x11,                   					//jbe    0x7b
0xbb, 0x0a, 0x00, 0x00, 0x00,          			//mov    ebx,0xa
0x48, 0xf7, 0xe3,                				//mul    rbx
0x48, 0x83, 0xee, 0x30,             			//sub    rsi,0x30
0x48, 0x01, 0xf0,                				//add    rax,rsi
0xeb, 0xb8,                   					//jmp    0x33
0xc3                     	 					//ret
};

const unsigned char MY_HLT_MACHINE_CODE[] =
{
0x48, 0xc7, 0xc0, 0x3c, 0x00, 0x00, 0x00, 0x48, 
0x31, 0xff, 0x0f, 0x05
};

const int PRINTF_SIZE = sizeof(MY_PRINTF_MACHINE_CODE)/sizeof(unsigned char);
const int SCANF_SIZE  = sizeof(MY_SCANF_MACHINE_CODE)/sizeof(unsigned char);
const int HLT_SIZE    = sizeof(MY_HLT_MACHINE_CODE)/sizeof(unsigned char);

const int HLT_ADDRESS   = SCANF_ADDRESS  + SCANF_SIZE;
const int SCANF_ADDRESS = PRINTF_ADDRESS + PRINTF_SIZE;
const int START_JUMP    = HLT_ADDRESS    + HLT_SIZE;

#endif
